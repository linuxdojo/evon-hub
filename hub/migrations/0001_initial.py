# Generated by Django 4.1 on 2022-09-28 06:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hub.models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "discovery_mode",
                    models.BooleanField(
                        default=True,
                        help_text="Disable to prevent any new Servers from joining your overlay network",
                    ),
                ),
            ],
            options={
                "verbose_name": "Config",
                "verbose_name_plural": "Config",
            },
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("policy_document", models.JSONField()),
            ],
            options={
                "verbose_name_plural": "Policies",
            },
        ),
        migrations.CreateModel(
            name="ServerGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Server Groups",
            },
        ),
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        editable=False,
                        help_text="This value is set on line 1 of /etc/openvpn/evon.uuid on your endpoint server.",
                        max_length=36,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                regex=re.compile(
                                    "^[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}$"
                                )
                            )
                        ],
                        verbose_name="UUID",
                    ),
                ),
                (
                    "fqdn",
                    models.CharField(
                        editable=False,
                        help_text="This value is set on line 2 of /etc/openvpn/evon.uuid on your endpoint server, with '.o82ml.dev.evon.link' appended. An index is auto added to the first name-part for uniqueness if needed. To change this value, edit /etc/openvpn/evon.uuid and restart OpenVPN on your endpoint server.",
                        max_length=255,
                        unique=True,
                        validators=[hub.models.EvonFQDNValidator],
                        verbose_name="FQDN",
                    ),
                ),
                (
                    "ipv4_address",
                    models.GenericIPAddressField(
                        editable=False,
                        help_text="This value is auto-assigned and static for this Server",
                        protocol="IPv4",
                        validators=[hub.models.EvonIPV4Validator],
                        verbose_name="IPv4 Address",
                    ),
                ),
                ("connected", models.BooleanField(default=False, editable=False)),
                (
                    "disconnected_since",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Disconnected Since",
                    ),
                ),
                (
                    "server_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hub.servergroup",
                    ),
                ),
            ],
        ),
    ]
